[WARNING]
README1==================================
README2=
README3=This is an automatically generated and maintained Data file.
README4=   --- Edit this file by hand AT YOUR OWN RISK! ---
README5=
README6==================================

[_DB_VersionCount]
LastVersionUpgrade=7
TextDataType=CmdLine

[Linux Trix//CmdLineObj]
0=0
1=1
2=2

[Linux Trix//CmdLineObj//0]
rowid=629
SuperUserMode=0
Notes=Handy CL that will generate passwords, gives you back a line of 48 random characters, useful for generating passwords. Change the 48 to whatever you want.
IsFavorite=1
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=180
SO=0
Entry=cat /dev/urandom | tr -dc [:alnum:] | head -c48
FriendlyName=Password Generator
WantsInput=0
UseShell=0
TerminalAlert=0

[Linux Trix//CmdLineObj//1]
rowid=630
SuperUserMode=0
Notes=Show installed memory size, memory usage, and swap statistics
IsFavorite=1
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=180
SO=1
Entry=grep -E 'Mem|Cache|Swap' /proc/meminfo
FriendlyName=Memory Info
WantsInput=0
UseShell=0
TerminalAlert=0

[Linux Trix//CmdLineObj//2]
rowid=631
SuperUserMode=0
Notes=Take output that is hard to read and put it into a table form. The -s specifies which character to separate on. To see the difference just run "cat /etc/passwd" by itself.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=180
SO=2
Entry=cat /etc/passwd | column -t -s :
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[apropos//CmdLineObj]
0=0
1=1

[apropos//CmdLineObj//0]
rowid=462
SuperUserMode=0
Notes=Searches "man" pages and returns anything relevant (apropos) for the word you typed.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=17
SO=0
Entry=apropos editor
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[apropos//CmdLineObj//1]
rowid=463
SuperUserMode=0
Notes=An example of a CL that will ask you for input when you run it (the <<S>> variable). Run it and type 'editor' or whatever you like!
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=17
SO=1
Entry=apropos <<S>>
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[aspell//CmdLineObj]
0=0

[aspell//CmdLineObj//0]
rowid=461
SuperUserMode=0
Notes=In a terminal use this Command Line to spell check the file you made as described in the notes under the command.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=1
CmdFK=31
SO=0
Entry=aspell check <<S>>
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[awk//CmdLineObj]
0=0

[awk//CmdLineObj//0]
rowid=460
SuperUserMode=0
Notes=This demonstrates a simple awk command. Note it is a "wants input", that is, when you run it you will be asked to type or paste text. Copy the three lines below for input to this CL:one two three four fivea b c d e1 2 3 4 5This awk command will print out the fifth word of each line.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=30
SO=0
Entry=awk '{print $5}'
FriendlyName=
WantsInput=1
UseShell=0
TerminalAlert=0

[bash//CmdLineObj]
0=0
1=1
2=2
3=3
4=4
5=5

[bash//CmdLineObj//0]
rowid=502
SuperUserMode=0
Notes=This will print bash's internal help which lists functions and builtins.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=181
SO=0
Entry=bash -c "help"
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[bash//CmdLineObj//1]
rowid=503
SuperUserMode=0
Notes=get information about the bash installed on your system.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=181
SO=1
Entry=file -h /bin/bash
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[bash//CmdLineObj//2]
rowid=504
SuperUserMode=0
Notes=get information about the bash installed on your system.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=181
SO=2
Entry=file -h /usr/bin/bash
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[bash//CmdLineObj//3]
rowid=505
SuperUserMode=0
Notes=Gets help for bash's 'alias' builtin.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=181
SO=3
Entry=bash -c "help alias"
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[bash//CmdLineObj//4]
rowid=506
SuperUserMode=0
Notes=A 'general' form to get help for a bash builtin. This CL uses a variable form, it will be filled in when you run it. If you know the name of the builtin you want help for, run this CL and you will be prompted for the builtin name...
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=181
SO=4
Entry=bash -c "help <<S>>"
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[bash//CmdLineObj//5]
rowid=507
SuperUserMode=0
Notes=This is an example of 'running' a command in bash. Alias, by itself, gives back all the bash alias's defined in your session, and this format for bash does exactly that. The -i (interactive) in this particular case is necessary...otherwise a simple -c (command) returns nothing. But. In general you should run bash command forms in a terminal.
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=181
SO=5
Entry=bash -ic 'command alias'
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[blkid//CmdLineObj]
0=0
1=1

[blkid//CmdLineObj//0]
rowid=508
SuperUserMode=0
Notes=Print out information about attached drives including UUID. The information will be limited when you run it as a normal user. If run as ROOT you will probably get more information. The command can take some time, be patient.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=18
SO=0
Entry=blkid
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[blkid//CmdLineObj//1]
rowid=509
SuperUserMode=1
Notes=When run as root you will most likely get more information than when run as non-admin user.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=1
CmdFK=18
SO=1
Entry=<ROOT> blkid
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[bzip2//CmdLineObj]
0=0
1=1
2=2
3=3

[bzip2//CmdLineObj//0]
rowid=90
SuperUserMode=0
Notes=You must have the file in your home directory for this to work, as written the original file will be removed.You can compress multiple files of course, just keep listing them or use wildcards.
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=38
SO=0
Entry=bzip2 ~/mycompresstest.txt
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[bzip2//CmdLineObj//1]
rowid=91
SuperUserMode=0
Notes=Decompress the file we just compressed. 
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=38
SO=1
Entry=bzip2 -d ~/mycompresstest.txt.bz2
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[bzip2//CmdLineObj//2]
rowid=92
SuperUserMode=0
Notes=same as first CL above but keeps the original file in place. Some distros may not have the -k option, see the next CL for how to do the same.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=38
SO=2
Entry=bzip2 -k ~/mycompresstest.txt
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[bzip2//CmdLineObj//3]
rowid=93
SuperUserMode=0
Notes=keeps the original file in place using stdout redirection. Note "Use Shell" is checked, commandoo doesn't handle ">"'s and such.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=38
SO=3
Entry=bzip2 -c ~/mycompresstest.txt > ~/mycompresstest.txt.gz
FriendlyName=
WantsInput=0
UseShell=1
TerminalAlert=0

[cal//CmdLineObj]
0=0
1=1
2=2

[cal//CmdLineObj//0]
rowid=515
SuperUserMode=0
Notes=Displays the current month. Used in a terminal the "_" will translate to color.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=41
SO=0
Entry=cal
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[cal//CmdLineObj//1]
rowid=516
SuperUserMode=0
Notes=Displays year 2055.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=41
SO=1
Entry=cal  2055
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[cal//CmdLineObj//2]
rowid=517
SuperUserMode=0
Notes=Displays month of March, 2055.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=41
SO=2
Entry=cal  03 2055
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[cat//CmdLineObj]
0=0
1=1
2=2
3=3
4=4

[cat//CmdLineObj//0]
rowid=510
SuperUserMode=0
Notes=Show contents of /etc/fstab with line numbers.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=4
SO=0
Entry=cat -n /etc/fstab
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[cat//CmdLineObj//1]
rowid=511
SuperUserMode=0
Notes=Simple output of a file, the variable allows you to choose the file at run time. You do not need to put quotes, it will be done automatically if necessary.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=4
SO=1
Entry=cat <<F>>
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[cat//CmdLineObj//2]
rowid=512
SuperUserMode=0
Notes=Example of using pipes: first variable will be a filename, second the text or regular expression to search for with grep. The -i option is for a case insensitive search.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=4
SO=2
Entry=cat <<F>> | grep -i <<S>>
FriendlyName=
WantsInput=0
UseShell=1
TerminalAlert=0

[cat//CmdLineObj//3]
rowid=513
SuperUserMode=0
Notes=In order to use "redirection symbols" (the >> in the middle, the others are variable markers) a Command Line must be run through a shell ("Use Shell"). Commandoo does not handle bash special characters.Careful with this one, it APPENDS to the destination file!
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=4
SO=3
Entry=cat <<F>> >> <<F>>
FriendlyName=
WantsInput=0
UseShell=1
TerminalAlert=0

[cat//CmdLineObj//4]
rowid=514
SuperUserMode=0
Notes=An alternative way to copy a file. Caution: it OVERWRITES the destination file! If the destination file doesn't exist (at least on Debian) it will be created.
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=4
SO=4
Entry=cat ~/MyOriginal.txt > ~/MyCopy.txt
FriendlyName=
WantsInput=0
UseShell=1
TerminalAlert=0

[chgrp//CmdLineObj]
0=0

[chgrp//CmdLineObj//0]
rowid=524
SuperUserMode=1
Notes=myfile will now be accessible to anyone belonging to Group admin2.
IsFavorite=0
DetachProcess=0
ThreatLevel=3
TerminalOnly=0
CmdFK=44
SO=0
Entry=<ROOT> chown admin2 /home/bob/myfile
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[chmod//CmdLineObj]
0=0
1=1
2=2
3=3
4=4
5=5

[chmod//CmdLineObj//0]
rowid=518
SuperUserMode=1
Notes=Security concious usage. u=user, g=group, o=world/othersr=read, w=write, x=executeSo: the owner can rwx, the group can only rx, and the world can only r.
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=42
SO=0
Entry=<ROOT> chmod u=rwx,g=rx,o=r /home/me/AnExec.sh
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[chmod//CmdLineObj//1]
rowid=519
SuperUserMode=1
Notes=You can also use a number system, to see the rules look on internet. This version is exactly the same as the CL above. Most common usage is "755".
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=42
SO=1
Entry=<ROOT> chmod 754 /home/me/AnExec.sh
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[chmod//CmdLineObj//2]
rowid=520
SuperUserMode=1
Notes=AnExec.sh will be set to executable. For security reasons also be sure to check that the user and group permission is as it should be for your system.
IsFavorite=0
DetachProcess=0
ThreatLevel=3
TerminalOnly=0
CmdFK=42
SO=2
Entry=<ROOT> chmod  +x /home/me/AnExec.sh
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[chmod//CmdLineObj//3]
rowid=521
SuperUserMode=1
Notes=AnExec.sh will be set to unexecutable, nodbody can run it. 
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=42
SO=3
Entry=<ROOT> chmod  -x /home/me/AnExec.sh
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[chmod//CmdLineObj//4]
rowid=522
SuperUserMode=1
Notes=AnExec.sh will be set to executable but only for "u" (user=you), nodbody else can run it. This is the usage with security in mind. The next CL allows variable input at run time so is your "go to" command for marking files executable.NOTE: be sure the file really =IS= an executable file before you set it to be executable.
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=42
SO=4
Entry=<ROOT> chmod  u+x /home/me/AnExec.sh
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[chmod//CmdLineObj//5]
rowid=523
SuperUserMode=1
Notes=Change a file to be executable. At run time you can choose the file.
IsFavorite=1
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=42
SO=5
Entry=<ROOT> chmod  u+x <<F>>
FriendlyName=Mark file as EXECUTABLE
WantsInput=0
UseShell=0
TerminalAlert=0

[chown//CmdLineObj]
0=0
1=1

[chown//CmdLineObj//0]
rowid=102
SuperUserMode=1
Notes=myfile will now belong to Julio.
IsFavorite=0
DetachProcess=0
ThreatLevel=3
TerminalOnly=0
CmdFK=43
SO=0
Entry=<ROOT> chown Julio /home/bob/myfile
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[chown//CmdLineObj//1]
rowid=103
SuperUserMode=1
Notes=TheFile will now belong to Sharon =AND= anyone in group "admin".
IsFavorite=0
DetachProcess=0
ThreatLevel=3
TerminalOnly=0
CmdFK=43
SO=1
Entry=<ROOT> chown Sharon:admin /home/eric/TheFile
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[cksum//CmdLineObj]
0=0
1=1
2=2

[cksum//CmdLineObj//0]
rowid=535
SuperUserMode=0
Notes=cksum will produce a number for any content, this one is set up to use input ("Wants Input") so you can send in any text you want and get a checksum. Copy this text to use for checksum. You will be asked for the text when you run because it is checked "Wants Input".
IsFavorite=1
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=5
SO=0
Entry=cksum
FriendlyName=
WantsInput=1
UseShell=0
TerminalAlert=0

[cksum//CmdLineObj//1]
rowid=536
SuperUserMode=0
Notes=Checksum and byte count of fstab file.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=5
SO=1
Entry=cksum /etc/fstab
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[cksum//CmdLineObj//2]
rowid=537
SuperUserMode=0
Notes=This gives the cksum and byte count of the file given, the variable lets you choose the file at runtime.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=5
SO=2
Entry=cksum <<F>>
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[cmp//CmdLineObj]
0=0

[cmp//CmdLineObj//0]
rowid=106
SuperUserMode=0
Notes=compare showing maximum information.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=47
SO=0
Entry=cmp --verbose file1 file2
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[column//CmdLineObj]
0=0

[column//CmdLineObj//0]
rowid=628
SuperUserMode=0
Notes=Take output that is hard to read and put it into a table form. The -s specifies which character to separate on. To see the difference just run "cat /etc/passwd" by itself.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=185
SO=0
Entry=cat /etc/passwd | column -t -s :
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[comm//CmdLineObj]
0=0

[comm//CmdLineObj//0]
rowid=107
SuperUserMode=0
Notes=Reminder: this command is only useful on SORTED files.(example of "Alert on Use" to give you important information before you allow the command to run)
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=48
SO=0
Entry=comm file1 file2
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=1

[cp//CmdLineObj]
0=0
1=1
2=2
3=3

[cp//CmdLineObj//0]
rowid=531
SuperUserMode=0
Notes=No clobber leaves existing files untouched, so "safe" to do. If you are copying a folder you may need to use -r (recursive) flag.
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=53
SO=0
Entry=cp --no-clobber SourceFolderFile DestinationFolderFile
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[cp//CmdLineObj//1]
rowid=532
SuperUserMode=0
Notes=force: overwrites existing files WITHOUT asking!
IsFavorite=0
DetachProcess=0
ThreatLevel=4
TerminalOnly=1
CmdFK=53
SO=1
Entry=cp --force SourceFolderFile DestinationFolderFile
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[cp//CmdLineObj//2]
rowid=533
SuperUserMode=0
Notes=Copy folder and sub-folders.
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=1
CmdFK=53
SO=2
Entry=cp --recursive SourceFolder DestinationFolder
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[cp//CmdLineObj//3]
rowid=534
SuperUserMode=0
Notes=Don't run interactively from commandoo, it will hang. Commandoo can not interact, at this time, with a process.
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=1
CmdFK=53
SO=3
Entry=cp -i FromFileFolder ToFileFolder
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=1

[csplit//CmdLineObj]
0=0
1=1
2=2

[csplit//CmdLineObj//0]
rowid=119
SuperUserMode=0
Notes=This splits TextFile.txt into three files: x01 will have 1st 12 lines, x02 lines 13-61, x03 will have lines 62 to end.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=55
SO=0
Entry=csplit TextFile.txt 13 62
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[csplit//CmdLineObj//1]
rowid=120
SuperUserMode=0
Notes=This splits TextFile.txt into at most 8 (repeat 7 times) pieces each split file having at least 2 lines.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=55
SO=1
Entry=csplit TextFile.txt 2 {7}
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[csplit//CmdLineObj//2]
rowid=121
SuperUserMode=0
Notes=This splits TextFile.txt at each line occurrence that has "Bob" in it. {*} means do it all the way to the end of the file (max is 99 splits).
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=55
SO=2
Entry=csplit TextFile.txt /Bob/ {*}
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[curl//CmdLineObj]
0=0
1=1
2=2
3=3
4=4
5=5

[curl//CmdLineObj//0]
rowid=525
SuperUserMode=0
Notes=Look up, using DICT protocol, the meaning of the word "abstruse".
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=56
SO=0
Entry=curl  dict://dict.org/d:abstruse
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[curl//CmdLineObj//1]
rowid=526
SuperUserMode=0
Notes=The variable version of the looking up a word. This CL will ask at Runtime for the word you want.
IsFavorite=1
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=56
SO=1
Entry=curl  dict://dict.org/d:<<S>>
FriendlyName=Look up word definition
WantsInput=0
UseShell=0
TerminalAlert=0

[curl//CmdLineObj//2]
rowid=527
SuperUserMode=0
Notes=Get list of dictionaries we can use. Then use the dictionary in the next CL below this one. We will look up "marriage" in the Devil's Dictionary by Ambrose Bierce, code for the dictionary in the list, as you see, is "devil"
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=56
SO=2
Entry=curl dict://dict.org/show:db
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[curl//CmdLineObj//3]
rowid=528
SuperUserMode=0
Notes=As promised the definition of "marriage" by Ambrose Bierce looking in "devil" (The Devil's Dictionary).
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=56
SO=3
Entry=curl dict://dict.org/d:marriage:devil
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[curl//CmdLineObj//4]
rowid=529
SuperUserMode=0
Notes=simple fetch and display of the index HTML page from my website TimePirate.org.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=56
SO=4
Entry=curl http://timepirate.org
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[curl//CmdLineObj//5]
rowid=530
SuperUserMode=0
Notes=This gets gnu org's manual table of contents and write to a file called gnuManual.html in your home folder.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=1
CmdFK=56
SO=5
Entry=curl -o ~/gnuManual.html http://www.gnu.org/software/gettext/manual/gettext.html
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[cut//CmdLineObj]
0=0
1=1
2=2
3=3
4=4

[cut//CmdLineObj//0]
rowid=538
SuperUserMode=0
Notes=will select and print only column 2 of the lines in the file.NOTE: by default it expects the columns to be separated by a <TAB> character.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=54
SO=0
Entry=cut -f 2 ~/columntest.txt
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[cut//CmdLineObj//1]
rowid=539
SuperUserMode=0
Notes=Notice "wants input" is checked. At run time you can then input the text you want "cut", just be sure to use <TAB> to separate the columns. This will cut both col. 2 and 3.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=54
SO=1
Entry=cut -f 2-3
FriendlyName=
WantsInput=1
UseShell=0
TerminalAlert=0

[cut//CmdLineObj//2]
rowid=540
SuperUserMode=0
Notes=This will ask for input, type in column list separated by comma (,).
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=54
SO=2
Entry=cut -f 2-3 -d ","
FriendlyName=
WantsInput=1
UseShell=0
TerminalAlert=0

[cut//CmdLineObj//3]
rowid=541
SuperUserMode=0
Notes=will select and print column 3 and all following columns.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=54
SO=3
Entry=cut -f 3- ~/columntest.txt
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[cut//CmdLineObj//4]
rowid=542
SuperUserMode=0
Notes=Using a delimiter other than <TAB>, specify it with the -d flag.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=54
SO=4
Entry=cut -f 1-5 -d ':' /etc/passwd
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[dash//CmdLineObj]
0=0
1=1

[dash//CmdLineObj//0]
rowid=422
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=182
SO=0
Entry=file -h /bin/dash
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[dash//CmdLineObj//1]
rowid=423
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=182
SO=1
Entry=file -h /usr/bin/dash
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[date//CmdLineObj]
0=0

[date//CmdLineObj//0]
rowid=15
SuperUserMode=0
Notes=Today's date
IsFavorite=1
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=6
SO=0
Entry=date
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[dc//CmdLineObj]
0=0
1=1

[dc//CmdLineObj//0]
rowid=551
SuperUserMode=0
Notes=Run without flags is in interactive so run in Terminal only, use "q" to exit.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=1
CmdFK=57
SO=0
Entry=dc
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=1

[dc//CmdLineObj//1]
rowid=552
SuperUserMode=0
Notes=RPN format for 23 * 3. p = print result.Note this uses "echo" so will only work if bash is your shell, or if your shell has an echo command, and that this is marked "use shell".
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=57
SO=1
Entry=echo '23 3 * p' | dc
FriendlyName=
WantsInput=0
UseShell=1
TerminalAlert=0

[dd//CmdLineObj]
0=0

[dd//CmdLineObj//0]
rowid=550
SuperUserMode=1
Notes=Useful CL that will take an .iso file and write it to a pen drive (eg, linux iso's to bootable thumb drive). However...Be sure you understand how to use it! Used improperly you can wipe drives!! You've been warned.The variable after "if" will be the iso file, the variable after "of" will be the drive specifier (just the letter, not 1, 2, etc.).
IsFavorite=0
DetachProcess=0
ThreatLevel=4
TerminalOnly=1
CmdFK=22
SO=0
Entry=<ROOT> dd if=<<F>> of=/dev/sd<<S>> bs=4M; sync
FriendlyName=
WantsInput=0
UseShell=1
TerminalAlert=0

[df//CmdLineObj]
0=0

[df//CmdLineObj//0]
rowid=549
SuperUserMode=0
Notes=List the currently mounted drives.
IsFavorite=1
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=11
SO=0
Entry=df -aTh
FriendlyName=Mounted Drive List
WantsInput=0
UseShell=0
TerminalAlert=0

[diff//CmdLineObj]
0=0
1=1
2=2

[diff//CmdLineObj//0]
rowid=546
SuperUserMode=0
Notes=Compare two text files.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=46
SO=0
Entry=diff FILE1.txt FILE2.txt
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[diff//CmdLineObj//1]
rowid=547
SuperUserMode=0
Notes=Compare two text files, -y = in two columns; ie. side by side.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=46
SO=1
Entry=diff -y FILE1.txt FILE2.txt
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[diff//CmdLineObj//2]
rowid=548
SuperUserMode=0
Notes=Compare two text files.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=46
SO=2
Entry=diff -y ~/mycompresstest.txt ~/mycompresstest2.txt
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[diff3//CmdLineObj]
0=0

[diff3//CmdLineObj//0]
rowid=545
SuperUserMode=0
Notes=Output differences in three files! Study this one on internet or by experiment. Careful, don't overwrite files.
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=59
SO=0
Entry=diff3 file1.txt file2.txt file3.txt
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[dig//CmdLineObj]
0=0

[dig//CmdLineObj//0]
rowid=130
SuperUserMode=0
Notes=Displays information about my website.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=58
SO=0
Entry=dig timepirate.org
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[dir//CmdLineObj]
0=0
1=1

[dir//CmdLineObj//0]
rowid=543
SuperUserMode=0
Notes=lists your home folder contents.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=61
SO=0
Entry=dir
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[dir//CmdLineObj//1]
rowid=544
SuperUserMode=0
Notes=List contents of /etc folder
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=61
SO=1
Entry=dir /etc
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[dmesg//CmdLineObj]
0=0
1=1
2=2

[dmesg//CmdLineObj//0]
rowid=557
SuperUserMode=0
Notes=System startup and ongoing information. Here, limited to last 10 lines.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=25
SO=0
Entry=dmesg | tail
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[dmesg//CmdLineObj//1]
rowid=558
SuperUserMode=0
Notes=Used with grep you can narrow output down, here to "err"or and int"err"upt and ov"err"ide
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=25
SO=1
Entry=dmesg | grep -i err
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[dmesg//CmdLineObj//2]
rowid=559
SuperUserMode=0
Notes=Without params or filters this gives a LOT of information. Run it in a terminal.
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=1
CmdFK=25
SO=2
Entry=dmesg
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=1

[dmidecode//CmdLineObj]
0=0

[dmidecode//CmdLineObj//0]
rowid=560
SuperUserMode=1
Notes=Example using TYPE 1 (=system)
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=24
SO=0
Entry=<ROOT> dmidecode -t 1
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[dpkg//CmdLineObj]
0=0
1=1
2=2

[dpkg//CmdLineObj//0]
rowid=554
SuperUserMode=0
Notes=View installed packages. Heads up, this can be a long list.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=21
SO=0
Entry=dpkg --get-selections
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[dpkg//CmdLineObj//1]
rowid=555
SuperUserMode=0
Notes=shows info about the specificed command / program. The next CL is the same but with a variable input so you can specify or search for the file you want to know about.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=21
SO=1
Entry=dpkg --search aplay
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[dpkg//CmdLineObj//2]
rowid=556
SuperUserMode=0
Notes=Will ask for the file you want to check at runtime.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=21
SO=2
Entry=dpkg --search <<F>>
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[du//CmdLineObj]
0=0

[du//CmdLineObj//0]
rowid=553
SuperUserMode=0
Notes=Show space used in /etc
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=60
SO=0
Entry=du -hc --max-depth=1 /etc
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[egrep//CmdLineObj]
0=0
1=1

[egrep//CmdLineObj//0]
rowid=571
SuperUserMode=0
Notes=egrep is deprecated. When you print the help 'grep' is given back. This egrep line is the same as: grep -E "(=|tion)" /etc/fstab
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=62
SO=0
Entry=egrep "(=|tion)" /etc/fstab
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=1

[egrep//CmdLineObj//1]
rowid=572
SuperUserMode=0
Notes=This CL is the recommended way to do the 'egrep' command above. It will print out every line in the file that has either an "=" or "tion" in it.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=62
SO=1
Entry=grep -E "(=|tion)" /etc/fstab
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[fgrep//CmdLineObj]
0=0
1=1

[fgrep//CmdLineObj//0]
rowid=569
SuperUserMode=0
Notes=fgrep is deprecated. When you print the help 'grep' is given back. This fgrep line is the same as: grep -F -f ~/user_list.txt /etc/group
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=64
SO=0
Entry=fgrep -f ~/user_list.txt /etc/group
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=1

[fgrep//CmdLineObj//1]
rowid=570
SuperUserMode=0
Notes=This requires a user_list.txt file that has a user name on separate lines, this will then print back groups that user belongs to. This CL will fail if that file is not there.The preferred grep usage for the 'fgrep' command above.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=64
SO=1
Entry=grep -F -f ~/user_list.txt /etc/group
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=1

[file//CmdLineObj]
0=0
1=1

[file//CmdLineObj//0]
rowid=143
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=67
SO=0
Entry=file /etc/fstab
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[file//CmdLineObj//1]
rowid=144
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=67
SO=1
Entry=file /bin/tar
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[find//CmdLineObj]
0=0
1=1
2=2
3=3

[find//CmdLineObj//0]
rowid=575
SuperUserMode=0
Notes=List all files in Videos that are bigger than 1 gigabyte.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=26
SO=0
Entry=find ~/Videos -size +1024M
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[find//CmdLineObj//1]
rowid=576
SuperUserMode=0
Notes=Find files between 1 and 2 gigabytes.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=26
SO=1
Entry=find ~/Videos -size +1024M -size -2048M -print0
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[find//CmdLineObj//2]
rowid=577
SuperUserMode=0
Notes=A harmless use to see which device folders are currently in use.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=26
SO=2
Entry=find /dev/bus
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[find//CmdLineObj//3]
rowid=578
SuperUserMode=0
Notes=Find is often used with xargs. This prints the total space used by all *.jpg files in Pictures folder.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=26
SO=3
Entry=find ~/Pictures -iname "*.jpg" -print0 | xargs -0 du -ch | tail -1
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[fmt//CmdLineObj]
0=0
1=1
2=2

[fmt//CmdLineObj//0]
rowid=154
SuperUserMode=0
Notes=This will prompt for text when run. Input this text when prompted and it will be formatted to 20 columns.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=71
SO=0
Entry=fmt --width=20
FriendlyName=
WantsInput=1
UseShell=0
TerminalAlert=0

[fmt//CmdLineObj//1]
rowid=155
SuperUserMode=0
Notes=How fmt works, see the next CL. Send files to fmt to get formatted paragraphs. This doesn't change the file unless you tell it to.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=71
SO=1
Entry=fmt --width=20 /etc/fstab
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[fmt//CmdLineObj//2]
rowid=156
SuperUserMode=0
Notes=How fold works. 
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=71
SO=2
Entry=fold --width=20 /etc/fstab
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[fold//CmdLineObj]
0=0
1=1
2=2

[fold//CmdLineObj//0]
rowid=151
SuperUserMode=0
Notes=When prompted paste this text into the input window.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=70
SO=0
Entry=fold --width=20
FriendlyName=
WantsInput=1
UseShell=0
TerminalAlert=0

[fold//CmdLineObj//1]
rowid=152
SuperUserMode=0
Notes=How fold works.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=70
SO=1
Entry=fold --width=30 /etc/fstab
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[fold//CmdLineObj//2]
rowid=153
SuperUserMode=0
Notes=How fmt works.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=70
SO=2
Entry=fmt --width=30 /etc/fstab
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[free//CmdLineObj]
0=0
1=1
2=2

[free//CmdLineObj//0]
rowid=584
SuperUserMode=0
Notes=Default display
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=69
SO=0
Entry=free
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[free//CmdLineObj//1]
rowid=585
SuperUserMode=0
Notes=Human readable.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=69
SO=1
Entry=free -h
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[free//CmdLineObj//2]
rowid=586
SuperUserMode=0
Notes=repeat showing every 5 seconds, don't run in this mode through commandoo.
IsFavorite=0
DetachProcess=0
ThreatLevel=3
TerminalOnly=1
CmdFK=69
SO=2
Entry=free -s 5
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=1

[fsck//CmdLineObj]
0=0
1=1
2=2
3=3
4=4

[fsck//CmdLineObj//0]
rowid=579
SuperUserMode=1
Notes=Unmount drive before use!!! All these are for ext4 systems! Change if the drive is another system!!!Variable one is the drive letter, variable two is the drive partition. After filling in it will be something like/dev/sdc1Will check filesystem on /dev/sda1 partition. It will also automatically fix all problems that can be fixed without human intervention. It will do nothing, if the partition is deemed clean (no dirty bit set).
IsFavorite=0
DetachProcess=0
ThreatLevel=4
TerminalOnly=1
CmdFK=23
SO=0
Entry=<ROOT> fsck.ext4 -p /dev/sd<<S>><<I>>
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=1

[fsck//CmdLineObj//1]
rowid=580
SuperUserMode=1
Notes=Unmount drive before use!!! If not ext4 drive change to appropriate!!same as before, but fsck will ignore the fact that the filesystem is clean and check+fix it nevertheless.
IsFavorite=0
DetachProcess=0
ThreatLevel=4
TerminalOnly=1
CmdFK=23
SO=1
Entry=<ROOT> fsck.ext4 -p -f /dev/sd<<S>><<I>>
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=1

[fsck//CmdLineObj//2]
rowid=581
SuperUserMode=1
Notes=Unmount drive before use!!! If not ext4 drive change to appropriate!!same as before, but with a progress bar.
IsFavorite=0
DetachProcess=0
ThreatLevel=4
TerminalOnly=1
CmdFK=23
SO=2
Entry=<ROOT> fsck.ext4 -p -f -C0 /dev/sd<<S>><<I>>
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=1

[fsck//CmdLineObj//3]
rowid=582
SuperUserMode=1
Notes=Unmount drive before use!!! If not ext4 drive change to appropriate!!Same as before but will attempt to find bad blocks on the device and make those blocks unusable by new files and directories.
IsFavorite=0
DetachProcess=0
ThreatLevel=4
TerminalOnly=1
CmdFK=23
SO=3
Entry=<ROOT> fsck.ext4 -f -c -C0 -v /dev/sd<<S>><<I>>
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=1

[fsck//CmdLineObj//4]
rowid=583
SuperUserMode=1
Notes=Unmount drive before use!!! If not ext4 drive change to appropriate!!a more thorough version of the bad blocks check.
IsFavorite=0
DetachProcess=0
ThreatLevel=4
TerminalOnly=1
CmdFK=23
SO=4
Entry=<ROOT> fsck.ext4 -f -cc -C0 /dev/sd<<S>><<I>>
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=1

[fuser//CmdLineObj]
0=0

[fuser//CmdLineObj//0]
rowid=157
SuperUserMode=0
Notes=Show processes for current user for the current folder. 
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=72
SO=0
Entry=fuser -v .
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[gimp//CmdLineObj]
0=0
1=1

[gimp//CmdLineObj//0]
rowid=31
SuperUserMode=0
Notes=opens gimp fresh.
IsFavorite=1
DetachProcess=1
ThreatLevel=1
TerminalOnly=0
CmdFK=12
SO=0
Entry=gimp
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[gimp//CmdLineObj//1]
rowid=32
SuperUserMode=0
Notes=opens gimp with the file specified at runtime.
IsFavorite=1
DetachProcess=1
ThreatLevel=1
TerminalOnly=0
CmdFK=12
SO=1
Entry=gimp <<F>>
FriendlyName=gimp with FILE
WantsInput=0
UseShell=0
TerminalAlert=0

[gpasswd//CmdLineObj]
0=0
1=1

[gpasswd//CmdLineObj//0]
rowid=603
SuperUserMode=1
Notes=Add user to sudo'ers.
IsFavorite=0
DetachProcess=0
ThreatLevel=4
TerminalOnly=1
CmdFK=28
SO=0
Entry=<ROOT> gpasswd -a USERNAME sudo
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[gpasswd//CmdLineObj//1]
rowid=604
SuperUserMode=1
Notes=Remove user from sudo'ers
IsFavorite=0
DetachProcess=0
ThreatLevel=4
TerminalOnly=1
CmdFK=28
SO=1
Entry=<ROOT> gpasswd  -d USERNAME sudo
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[gpg2//CmdLineObj]
0=0
1=1
2=2
3=3
4=4
5=5
6=6
7=7
8=8
9=9
10=10
11=11
12=12
13=13
14=14
15=15

[gpg2//CmdLineObj//0]
rowid=587
SuperUserMode=0
Notes=show keys currently registered on your computer. If you have already made yourself some keys, use this list to grab the ID so you can use the rest of these CL's. You can grab your personal keys and paste them here later to make it even easier to use.
IsFavorite=1
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=13
SO=0
Entry=gpg2 --list-keys
FriendlyName=gpg2 LIST KEYS
WantsInput=0
UseShell=0
TerminalAlert=0

[gpg2//CmdLineObj//1]
rowid=588
SuperUserMode=0
Notes=Put your pgp/gpg signature on a a text file. First variable is the Key ID, the second the file. The result will be copied to the same file name but with an .asc extension.
IsFavorite=1
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=13
SO=1
Entry=gpg2 -u <<S>> --clearsign <<F>>
FriendlyName=gpg2 CLEARSIGN
WantsInput=0
UseShell=0
TerminalAlert=0

[gpg2//CmdLineObj//2]
rowid=589
SuperUserMode=0
Notes=Sign a file by making a detached file that accompanies the original file.
IsFavorite=1
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=13
SO=2
Entry=gpg2 -u <<S>> --detach-sign <<F>>
FriendlyName=gpg2 SIGN DETACHED FILE
WantsInput=0
UseShell=0
TerminalAlert=0

[gpg2//CmdLineObj//3]
rowid=590
SuperUserMode=0
Notes=Encrypt a file. Variables: your ID, receipeint's ID, file name. HARMLESS yes, but CAREFUL: when encrypted ONLY the recipient can decrypt it. If you want a copy on your system make sure you have an unencrypted copy.
IsFavorite=1
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=13
SO=3
Entry=gpg2 -e -u <<S>> -r <<S>> <<F>>
FriendlyName=gpg2 ENCRYPT
WantsInput=0
UseShell=0
TerminalAlert=0

[gpg2//CmdLineObj//4]
rowid=591
SuperUserMode=0
Notes=Decrypt a file. Obviously, you must have encrypted it to yourself, or someone has encrypted it to your PUBLIC KEY, otherwise you won't know the password.
IsFavorite=1
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=13
SO=4
Entry=gpg2 -d <<F>>
FriendlyName=gpg2 DECRYPT
WantsInput=0
UseShell=0
TerminalAlert=0

[gpg2//CmdLineObj//5]
rowid=592
SuperUserMode=0
Notes=generate a new key pair
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=1
CmdFK=13
SO=5
Entry=gpg2 --gen-key
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[gpg2//CmdLineObj//6]
rowid=593
SuperUserMode=0
Notes=NOTE!  Generate a revocation certificate. Quite important to do this immediately after creating a key pair. If the key becomes compromised you will use this certificate to "revoke" it from the servers so anyone you've sent messages knows it is no longer safe.KEEP THESE revoke certificates safe and private!!
IsFavorite=0
DetachProcess=0
ThreatLevel=3
TerminalOnly=1
CmdFK=13
SO=6
Entry=gpg2 --gen-revoke
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[gpg2//CmdLineObj//7]
rowid=594
SuperUserMode=0
Notes=export keys to a key server. Also see the --gen-revoke CL above!
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=1
CmdFK=13
SO=7
Entry=gpg2 --send-keys <<S>>
FriendlyName=gpg2 SEND KEYS TO SERVER
WantsInput=0
UseShell=0
TerminalAlert=0

[gpg2//CmdLineObj//8]
rowid=595
SuperUserMode=0
Notes=export keys. Danger because your private key should be known ONLY to you!! Store private keys very securely. Public Key can be given to anyone.
IsFavorite=0
DetachProcess=0
ThreatLevel=4
TerminalOnly=1
CmdFK=13
SO=8
Entry=gpg2 --export
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[gpg2//CmdLineObj//9]
rowid=596
SuperUserMode=0
Notes=import / merge keys. In this case we assume the public key is written to a file which you will specify. You could also maybe make this a "wants input", get rid of the <<F>>, and then paste in the public key text at runtime.
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=13
SO=9
Entry=gpg2 --import <<F>>
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[gpg2//CmdLineObj//10]
rowid=597
SuperUserMode=0
Notes=show key fingerprints
IsFavorite=1
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=13
SO=10
Entry=gpg2 --fingerprint
FriendlyName=gpg2 FINGERPRINTS
WantsInput=0
UseShell=0
TerminalAlert=0

[gpg2//CmdLineObj//11]
rowid=598
SuperUserMode=0
Notes=sign a key
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=1
CmdFK=13
SO=11
Entry=gpg2 --sign-key
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[gpg2//CmdLineObj//12]
rowid=599
SuperUserMode=0
Notes=Recieve keys from server
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=1
CmdFK=13
SO=12
Entry=gpg2 --recv-keys <<S>>
FriendlyName=gpg2 KEYS FROM SERVER
WantsInput=0
UseShell=0
TerminalAlert=0

[gpg2//CmdLineObj//13]
rowid=600
SuperUserMode=0
Notes=search for keys on a key server
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=1
CmdFK=13
SO=13
Entry=gpg2 --search-keys <<S>>
FriendlyName=gpg2 KEYS SEARCH
WantsInput=0
UseShell=0
TerminalAlert=0

[gpg2//CmdLineObj//14]
rowid=601
SuperUserMode=0
Notes=update all keys from a keyserver
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=1
CmdFK=13
SO=14
Entry=gpg2 --refresh-keys
FriendlyName=gpg2 KEYS REFRESH
WantsInput=0
UseShell=0
TerminalAlert=0

[gpg2//CmdLineObj//15]
rowid=602
SuperUserMode=0
Notes=create ascii armored output, that is, not binary but human "readable". This CL is incomplete, just wanted you to be aware of the "armor" option.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=1
CmdFK=13
SO=15
Entry=gpg2 --armor
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[grep//CmdLineObj]
0=0
1=1
2=2
3=3
4=4
5=5
6=6
7=7

[grep//CmdLineObj//0]
rowid=561
SuperUserMode=0
Notes=The -E indicates the search pattern is an extended regular expression. So this will print any line from the file having "=" or "tion" in it.Without the -E it would search for the literal string "(=|tion)" which it won't find, see how the next CL works...
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=7
SO=0
Entry=grep -E "(=|tion)" /etc/fstab
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[grep//CmdLineObj//1]
rowid=562
SuperUserMode=0
Notes=As you see without the -E switch the search term is not found. See the next CL to find "tion" again...
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=7
SO=1
Entry=grep (=|tion) /etc/fstab
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[grep//CmdLineObj//2]
rowid=563
SuperUserMode=0
Notes=Now we find lines with "tion" in them. So you need to choose whether you will use the -E switch or not.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=7
SO=2
Entry=grep tion /etc/fstab
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[grep//CmdLineObj//3]
rowid=564
SuperUserMode=0
Notes=And, to be complete, this find the lines with "=" in them. 
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=7
SO=3
Entry=grep = /etc/fstab
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[grep//CmdLineObj//4]
rowid=565
SuperUserMode=0
Notes=Get useful memory info.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=7
SO=4
Entry=grep -E 'Mem|Cache|Swap' /proc/meminfo
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[grep//CmdLineObj//5]
rowid=566
SuperUserMode=0
Notes=With the variables you will be, at runtime, asked first for the search pattern and then the filename.
IsFavorite=1
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=7
SO=5
Entry=grep -E <<S>> <<F>>
FriendlyName=grep in FILE
WantsInput=0
UseShell=0
TerminalAlert=0

[grep//CmdLineObj//6]
rowid=567
SuperUserMode=0
Notes=This is an example of grep where you can use "Wants Input" to give the give the text to search. It will find any lines in the text you give that contain the word 'and', notice it is not in -E mode, we are searching for simple text not an extrended regular expression.
IsFavorite=1
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=7
SO=6
Entry=grep and
FriendlyName=grep INPUT
WantsInput=1
UseShell=0
TerminalAlert=0

[grep//CmdLineObj//7]
rowid=568
SuperUserMode=0
Notes=This is an example of grep where you can use "Wants Input" to give the give the text to search. It will find any lines in the text you give that contain the word you specify in the "string" variable at runtime.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=7
SO=7
Entry=grep -E <<S>>
FriendlyName=
WantsInput=1
UseShell=0
TerminalAlert=0

[groupadd//CmdLineObj]
0=0

[groupadd//CmdLineObj//0]
rowid=616
SuperUserMode=1
Notes=It is as simple as specifying the group you want to create. Also study the help.
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=1
CmdFK=78
SO=0
Entry=<ROOT> groupadd GROUP_NAMES_MUST_BE_32_CHARACTERS_OR_LESS
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[groups//CmdLineObj]
0=0

[groups//CmdLineObj//0]
rowid=615
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=75
SO=0
Entry=groups YourUserName
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[gunzip//CmdLineObj]
0=0

[gunzip//CmdLineObj//0]
rowid=89
SuperUserMode=0
Notes=A simple unzip example, see gzip. CL's for gunzip will be very similar to the gzip examples, look at the help.
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=36
SO=0
Entry=gunzip /mypath/myfile.gz
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[gzip//CmdLineObj]
0=0
1=1
2=2
3=3
4=4
5=5
6=6

[gzip//CmdLineObj//0]
rowid=608
SuperUserMode=0
Notes=You must have the file in your home directory for this to work, as written the original file will be REMOVED, the compressed file will have the same name but with a .gz extension added.You can compress multiple files of course, just keep listing them or use wildcards.
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=35
SO=0
Entry=gzip ~/mycompresstest.txt
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[gzip//CmdLineObj//1]
rowid=609
SuperUserMode=0
Notes=Decompress the file we just compressed. 
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=35
SO=1
Entry=gzip -d ~/mycompresstest.txt.gz
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[gzip//CmdLineObj//2]
rowid=610
SuperUserMode=0
Notes=same as first CL above but keeps the original file in place. Some distros may not have the -k option, see the next CL for how to do the same.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=35
SO=2
Entry=gzip -k ~/mycompresstest.txt
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[gzip//CmdLineObj//3]
rowid=611
SuperUserMode=0
Notes=keeps the original file in place using stdout redirection. Note "Use Shell" is checked, commandoo doesn't handle ">"'s and such.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=35
SO=3
Entry=gzip -c ~/mycompresstest.txt > ~/mycompresstest.txt.gz
FriendlyName=
WantsInput=0
UseShell=1
TerminalAlert=0

[gzip//CmdLineObj//4]
rowid=612
SuperUserMode=0
Notes=Recusively compress the files in the specified folder. Note this compresses them individually.
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=35
SO=4
Entry=gzip -r ~/CompressTest/
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[gzip//CmdLineObj//5]
rowid=613
SuperUserMode=0
Notes=Recusively uncompress the files in the specified folder we just compressed. 
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=35
SO=5
Entry=gzip -dr ~/CompressTest/
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[gzip//CmdLineObj//6]
rowid=614
SuperUserMode=0
Notes=Show compression ratio
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=35
SO=6
Entry=gzip -lv ~/CompTest.tar.gz
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[head//CmdLineObj]
0=0
1=1
2=2
3=3

[head//CmdLineObj//0]
rowid=162
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=81
SO=0
Entry=head /etc/group
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[head//CmdLineObj//1]
rowid=163
SuperUserMode=0
Notes=Display only first 5 lines.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=81
SO=1
Entry=head -5 /etc/group
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[head//CmdLineObj//2]
rowid=164
SuperUserMode=0
Notes=Display first 15 characters. 
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=81
SO=2
Entry=head -c 15 /etc/group
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[head//CmdLineObj//3]
rowid=165
SuperUserMode=0
Notes=Display first 15 characters of listed files with maximum verbose information.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=81
SO=3
Entry=head -c 15 -v /etc/group /etc/fstab
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[hostname//CmdLineObj]
0=0

[hostname//CmdLineObj//0]
rowid=607
SuperUserMode=0
Notes=ip address of host
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=174
SO=0
Entry=hostname -i
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[iconv//CmdLineObj]
0=0

[iconv//CmdLineObj//0]
rowid=606
SuperUserMode=0
Notes=A random example, one should research before use. The input.txt file is converted from UTF8 to the specified ISO and output to output.txt
IsFavorite=0
DetachProcess=0
ThreatLevel=3
TerminalOnly=1
CmdFK=79
SO=0
Entry=iconv -f UTF-8 -t ISO-8859-1 < input.txt > output.txt
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[id//CmdLineObj]
0=0

[id//CmdLineObj//0]
rowid=605
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=85
SO=0
Entry=id YourUserName
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[import//CmdLineObj]
0=0

[import//CmdLineObj//0]
rowid=620
SuperUserMode=0
Notes=Better used from terminal perhaps but you can use it here. The screen cursor will change and you can click and drag a portion of the screen. When you let up the mouse button what you selected will be saved to your downloads folder as a .jpg file.
IsFavorite=1
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=82
SO=0
Entry=import ~/Downloads/screenshot.jpg
FriendlyName=ScreenShot
WantsInput=0
UseShell=0
TerminalAlert=1

[ip//CmdLineObj]
0=0
1=1
2=2

[ip//CmdLineObj//0]
rowid=617
SuperUserMode=0
Notes=Display all network interface devices. Do not run this command with other parameters or flags, study / research this command first.
IsFavorite=1
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=83
SO=0
Entry=ip a
FriendlyName=IP Address
WantsInput=0
UseShell=0
TerminalAlert=0

[ip//CmdLineObj//1]
rowid=618
SuperUserMode=0
Notes=equivalent to the CL above this.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=83
SO=1
Entry=ip address show
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[ip//CmdLineObj//2]
rowid=619
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=83
SO=2
Entry=ip route show
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[join//CmdLineObj]
0=0

[join//CmdLineObj//0]
rowid=623
SuperUserMode=0
Notes=The files must exist and be of a certain format for this to work. If you want to test it paste the two sections below into appropriate files in your /home/MyUserName/ folder:1 India 2 US 3 Ireland 4 UK 5 Canada 1 NewDelhi 2 Washington 3 Dublin 4 London 5 Toronto 
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=88
SO=0
Entry=join ~/1.txt ~/2.txt
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=1

[konsole//CmdLineObj]
0=0
1=1

[konsole//CmdLineObj//0]
rowid=729
SuperUserMode=0
Notes=opens a konsole if you have that program. Note it is a "child proc", that is, it is kept open and is a "child" of commandoo. 
IsFavorite=0
DetachProcess=1
ThreatLevel=1
TerminalOnly=0
CmdFK=2
SO=0
Entry=konsole
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[konsole//CmdLineObj//1]
rowid=730
SuperUserMode=0
Notes=konsole allows you to write custom terminals which you then give a name. This will open a konsole that has a profile named "Red". Change the name if you have another profile. Note this is a "child proc", that is, it is kept open.
IsFavorite=1
DetachProcess=1
ThreatLevel=1
TerminalOnly=0
CmdFK=2
SO=1
Entry=konsole --profile Red
FriendlyName=Konsole RED
WantsInput=0
UseShell=0
TerminalAlert=0

[last//CmdLineObj]
0=0

[last//CmdLineObj//0]
rowid=627
SuperUserMode=0
Notes=Alone it lists logins
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=173
SO=0
Entry=last
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[ln//CmdLineObj]
0=0

[ln//CmdLineObj//0]
rowid=624
SuperUserMode=0
Notes=Make sure "TargetFile" exists. The new link will act as if it IS the target you specified; that is, as a shortcut. It does not contain any data other than 'pointing" to the TargetFile.
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=90
SO=0
Entry=ln -s ~/TargetFile ~/Desktop/MyFileShortcut
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=1

[locate//CmdLineObj]
0=0
1=1
2=2
3=3
4=4

[locate//CmdLineObj//0]
rowid=661
SuperUserMode=0
Notes=Flags: the file must exist and it is a case insensitive search.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=98
SO=0
Entry=locate -ei 'sqlite3'
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[locate//CmdLineObj//1]
rowid=662
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=98
SO=1
Entry=locate -ei 'fstab'
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[locate//CmdLineObj//2]
rowid=663
SuperUserMode=0
Notes=The varialbe will ask you what text you are looking for when run.
IsFavorite=1
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=98
SO=2
Entry=locate -ei <<S>>
FriendlyName=Locate files
WantsInput=0
UseShell=0
TerminalAlert=0

[locate//CmdLineObj//3]
rowid=664
SuperUserMode=1
Notes=This command will update the mlocate database that "locate" uses. Be aware that the update could take some time?
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=98
SO=3
Entry=<ROOT> updatedb
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[locate//CmdLineObj//4]
rowid=665
SuperUserMode=0
Notes=print information about the mlocate database
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=98
SO=4
Entry=locate -S
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[logname//CmdLineObj]
0=0

[logname//CmdLineObj//0]
rowid=647
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=97
SO=0
Entry=logname
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[look//CmdLineObj]
0=0

[look//CmdLineObj//0]
rowid=646
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=95
SO=0
Entry=look 'spel'
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[ls//CmdLineObj]
0=0
1=1

[ls//CmdLineObj//0]
rowid=644
SuperUserMode=0
Notes=-al : One of the more useful switches, look at help for more information. If you run this in a terminal most likely you will get very pretty color coding, commandoo does not yet support that so it will be in plain text.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=93
SO=0
Entry=ls -al ~/
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[ls//CmdLineObj//1]
rowid=645
SuperUserMode=0
Notes=Scan the Downloads folder. 
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=93
SO=1
Entry=ls -al ~/Downloads
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[lsblk//CmdLineObj]
0=0

[lsblk//CmdLineObj//0]
rowid=643
SuperUserMode=0
Notes=-m shows the owner
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=94
SO=0
Entry=lsblk -m
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[lsof//CmdLineObj]
0=0
1=1
2=2
3=3

[lsof//CmdLineObj//0]
rowid=651
SuperUserMode=0
Notes=Put your username in and this will list top 50 files you currently have open.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=99
SO=0
Entry=lsof -u YourUserName | head -50
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[lsof//CmdLineObj//1]
rowid=652
SuperUserMode=0
Notes=lists all network / internet connections.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=99
SO=1
Entry=lsof -i
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[lsof//CmdLineObj//2]
rowid=653
SuperUserMode=0
Notes=list all processes with open files that have "comm" in the name.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=99
SO=2
Entry=lsof -c 'comm'
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[lsof//CmdLineObj//3]
rowid=654
SuperUserMode=0
Notes=List all processes using port 80.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=99
SO=3
Entry=lsof -i :80
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[man//CmdLineObj]
0=0

[man//CmdLineObj//0]
rowid=650
SuperUserMode=0
Notes=This will invoke the manual pages for the grep command, run in terminal only.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=1
CmdFK=101
SO=0
Entry=man grep
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=1

[mkdir//CmdLineObj]
0=0
1=1

[mkdir//CmdLineObj//0]
rowid=648
SuperUserMode=0
Notes=This WILL create the folder "TestFolder" in your home folder! Not a big deal, just want you to know. If you run it a second time you will see that it refuses because the folder already exists.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=100
SO=0
Entry=mkdir ~/TestFolder
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=1

[mkdir//CmdLineObj//1]
rowid=649
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=100
SO=1
Entry=mkdir '~/TestFolderName with spaces'
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[mount//CmdLineObj]
0=0

[mount//CmdLineObj//0]
rowid=660
SuperUserMode=1
Notes=This will mount a RAM drive on your system with a size of 100 megabytes at the testmount folder in your home folder. NOTE: testmount must exist and it must be empty. See 'umount' to unmout it. Note this is checked for SuperUser. Be sure you have researched and understand all the concepts before you use something like this...
IsFavorite=1
DetachProcess=0
ThreatLevel=3
TerminalOnly=0
CmdFK=1
SO=0
Entry=<ROOT> mount -t tmpfs -o size=100M ext4 ~/testmount
FriendlyName=RAM Drive
WantsInput=0
UseShell=0
TerminalAlert=0

[mv//CmdLineObj]
0=0
1=1
2=2
3=3

[mv//CmdLineObj//0]
rowid=656
SuperUserMode=0
Notes=Moves the files. -n (--no-clobber) will not overwrite files if they already exist, so a nice safe option.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=103
SO=0
Entry=mv -n ~/MyFolder/* ~/MyNewFolder
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[mv//CmdLineObj//1]
rowid=657
SuperUserMode=0
Notes=Moves the files. -f (--force) overwrites without asking. So NOT safe if you are unsure about the move.
IsFavorite=0
DetachProcess=0
ThreatLevel=3
TerminalOnly=0
CmdFK=103
SO=1
Entry=mv -f ~/MyFolder/* ~/MyNewFolder
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[mv//CmdLineObj//2]
rowid=658
SuperUserMode=0
Notes=Renames the file without asking.
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=103
SO=2
Entry=mv -f ~/Myfile.txt ~/Myfile.bak
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[mv//CmdLineObj//3]
rowid=659
SuperUserMode=0
Notes=Move the file to the folder with --no-clobber (-n). -v, verbose, show maximim information.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=103
SO=3
Entry=mv -nv ~/Myfile.txt ~/MyFolder
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[nice//CmdLineObj]
0=0

[nice//CmdLineObj//0]
rowid=672
SuperUserMode=0
Notes=List files in home folder with a reduced priority.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=104
SO=0
Entry=nice -n5 ls -al ~/
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[nl//CmdLineObj]
0=0

[nl//CmdLineObj//0]
rowid=671
SuperUserMode=0
Notes=This will prompt for input. Type:onetwothreeor whatever...
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=109
SO=0
Entry=nl
FriendlyName=
WantsInput=1
UseShell=0
TerminalAlert=0

[numfmt//CmdLineObj]
0=0
1=1

[numfmt//CmdLineObj//0]
rowid=669
SuperUserMode=0
Notes=2048 in iec format
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=178
SO=0
Entry=numfmt  --to=iec 2048
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[numfmt//CmdLineObj//1]
rowid=670
SuperUserMode=0
Notes=2048 in si format
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=178
SO=1
Entry=numfmt  --to=si 2048
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[passwd//CmdLineObj]
0=0

[passwd//CmdLineObj//0]
rowid=668
SuperUserMode=0
Notes=Show the status of the password for the named user.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=114
SO=0
Entry=passwd --status USERNAME
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[paste//CmdLineObj]
0=0
1=1

[paste//CmdLineObj//0]
rowid=666
SuperUserMode=0
Notes=create the files on your system with one word on each line. This will merge the lines with <TAB> separators.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=113
SO=0
Entry=paste file1 file2
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[paste//CmdLineObj//1]
rowid=667
SuperUserMode=0
Notes=This will merge the lines with the delimiter (-d) of  - 
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=113
SO=1
Entry=paste -d "-" file1 file2
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[pgrep//CmdLineObj]
0=0
1=1

[pgrep//CmdLineObj//0]
rowid=573
SuperUserMode=0
Notes=To test ps: Use commandoo to launch gimp (use the CL for gimp). If you don't have gimp start another GUI program that you do have, using a CL like gimp's.Then run this command, it will give an integer ID back. Use that as input to the next CL...
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=172
SO=0
Entry=ps -A | grep commandoo
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=1

[pgrep//CmdLineObj//1]
rowid=574
SuperUserMode=0
Notes=At runtime give the process id (found using 'ps') and this will list all child processes of that process. If you've used the CL above you will have commandoo's process id and it will list as "children" any GUI's you have started with commandoo.
IsFavorite=1
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=172
SO=1
Entry=pgrep -l -P <<I>>
FriendlyName=Process: CHILDREN
WantsInput=0
UseShell=0
TerminalAlert=1

[ping//CmdLineObj]
0=0

[ping//CmdLineObj//0]
rowid=674
SuperUserMode=0
Notes=Ping free software association .org  1 time and stop.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=112
SO=0
Entry=ping -c 1 fsse.org
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[printenv//CmdLineObj]
0=0

[printenv//CmdLineObj//0]
rowid=673
SuperUserMode=0
Notes=The "environment" behind commandoo.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=29
SO=0
Entry=printenv
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[ps//CmdLineObj]
0=0
1=1
2=2
3=3

[ps//CmdLineObj//0]
rowid=675
SuperUserMode=0
Notes=Show all processes.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=8
SO=0
Entry=ps -A
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[ps//CmdLineObj//1]
rowid=676
SuperUserMode=0
Notes=ps's complete help.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=8
SO=1
Entry=ps --help all
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[ps//CmdLineObj//2]
rowid=677
SuperUserMode=0
Notes=The ps help command tells you do something like this for detailed help. See the regular help first, and then make or edit your CL help command to somthing like above if you want to narrow the help specifically.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=8
SO=2
Entry=ps --help simple
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[ps//CmdLineObj//3]
rowid=678
SuperUserMode=0
Notes=At runtime fill the string variable with the text you want to search for.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=8
SO=3
Entry=ps -A | grep <<S>>
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[pwd//CmdLineObj]
0=0

[pwd//CmdLineObj//0]
rowid=682
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=118
SO=0
Entry=pwd
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[rev//CmdLineObj]
0=0
1=1

[rev//CmdLineObj//0]
rowid=680
SuperUserMode=0
Notes=This will ask for input on running, type what you want. Fun!
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=124
SO=0
Entry=rev
FriendlyName=
WantsInput=1
UseShell=0
TerminalAlert=0

[rev//CmdLineObj//1]
rowid=681
SuperUserMode=0
Notes=Fun!
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=124
SO=1
Entry=rev /etc/fstab
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[rsync//CmdLineObj]
0=0

[rsync//CmdLineObj//0]
rowid=679
SuperUserMode=0
Notes=A well-formed rsync example for you. Notice the --dry-run, this will only show what WOULD happen, it actually does nothing.
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=125
SO=0
Entry=rsync --dry-run -vshtplgiEr --stats ~/Downloads /PathToSomeEmptyFolder
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[sdiff//CmdLineObj]
0=0

[sdiff//CmdLineObj//0]
rowid=696
SuperUserMode=0
Notes=Compare differences in text files of your choosing.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=127
SO=0
Entry=sdiff ~/My1.txt ~/My2.txt
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[sed//CmdLineObj]
0=0
1=1
2=2

[sed//CmdLineObj//0]
rowid=693
SuperUserMode=0
Notes=The go-to command for most people is the s which stands for substitute. I'm only going to give a couple of very simple examples. It will be your job to learn and write more useful ones.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=128
SO=0
Entry=echo day | sed 's/day/night/'
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[sed//CmdLineObj//1]
rowid=694
SuperUserMode=0
Notes=An example of a "Gotcha", that is, unexpected results!
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=128
SO=1
Entry=echo Sunday | sed 's/day/night/'
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[sed//CmdLineObj//2]
rowid=695
SuperUserMode=0
Notes=This will ask for input on running. Copy and paste this text as input into it. Note that this ==> Input, is NOT changed (case sensitivity).
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=128
SO=2
Entry=sed 's/input/INPUTT/g'
FriendlyName=
WantsInput=1
UseShell=0
TerminalAlert=0

[seq//CmdLineObj]
0=0
1=1
2=2
3=3
4=4

[seq//CmdLineObj//0]
rowid=688
SuperUserMode=0
Notes=output 1 to 23
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=131
SO=0
Entry=seq 23
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[seq//CmdLineObj//1]
rowid=689
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=131
SO=1
Entry=seq 13 23
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[seq//CmdLineObj//2]
rowid=690
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=131
SO=2
Entry=seq -s ',' 292 303
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[seq//CmdLineObj//3]
rowid=691
SuperUserMode=0
Notes=step by 2
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=131
SO=3
Entry=seq 6 2 20
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[seq//CmdLineObj//4]
rowid=692
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=131
SO=4
Entry=seq -f %e 100 120
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[sh//CmdLineObj]
0=0
1=1

[sh//CmdLineObj//0]
rowid=424
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=183
SO=0
Entry=file -h /bin/sh
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[sh//CmdLineObj//1]
rowid=425
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=183
SO=1
Entry=file -h /usr/bin/sh
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[sort//CmdLineObj]
0=0
1=1
2=2

[sort//CmdLineObj//0]
rowid=685
SuperUserMode=0
Notes=This will ask for input on running. Type in:xypbfor example.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=129
SO=0
Entry=sort
FriendlyName=
WantsInput=1
UseShell=0
TerminalAlert=0

[sort//CmdLineObj//1]
rowid=686
SuperUserMode=0
Notes=This does the same except in reverse order.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=129
SO=1
Entry=sort -r
FriendlyName=
WantsInput=1
UseShell=0
TerminalAlert=0

[sort//CmdLineObj//2]
rowid=687
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=129
SO=2
Entry=sort /etc/group
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[split//CmdLineObj]
0=0

[split//CmdLineObj//0]
rowid=684
SuperUserMode=0
Notes=Break the video into 10 megabyte chunks. The output files are called xaa, xab, xac.... (if many output files then they start with z).To re-assemble them make sure they are fed to "cat" in the same (sorted) order and output to a file. Voila.
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=132
SO=0
Entry=split --bytes=10M ~/VacationVideo.avi
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[ss//CmdLineObj]
0=0

[ss//CmdLineObj//0]
rowid=683
SuperUserMode=0
Notes=Show listening ports with extended info and memory usage.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=136
SO=0
Entry=ss -lem
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[stat//CmdLineObj]
0=0
1=1

[stat//CmdLineObj//0]
rowid=701
SuperUserMode=0
Notes=file system (folder)
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=134
SO=0
Entry=stat -f /etc
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[stat//CmdLineObj//1]
rowid=702
SuperUserMode=0
Notes=file status
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=134
SO=1
Entry=stat /etc/fstab
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[tail//CmdLineObj]
0=0

[tail//CmdLineObj//0]
rowid=700
SuperUserMode=0
Notes=Last 3 lines of the file
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=140
SO=0
Entry=tail -3 /etc/group
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[tar//CmdLineObj]
0=0
1=1
2=2
3=3
4=4
5=5

[tar//CmdLineObj//0]
rowid=76
SuperUserMode=0
Notes=Basic archiving of a folder. Put the files you want to test in a folder in your home directory called CompressTest.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=34
SO=0
Entry=tar -cvf ~/CompTest.tar ~/CompressTest/
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[tar//CmdLineObj//1]
rowid=77
SuperUserMode=0
Notes=Same as above but also compresses the tar file with gzip.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=34
SO=1
Entry=tar -cvzf ~/CompTest.tar.gz ~/CompressTest/
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[tar//CmdLineObj//2]
rowid=78
SuperUserMode=0
Notes=Same as above but this time to a bzip2 format.
IsFavorite=1
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=34
SO=2
Entry=tar -cvjf ~/CompTest.tar.bz2 ~/CompressTest/
FriendlyName=tar ARCHIVE and COMPRESS
WantsInput=0
UseShell=0
TerminalAlert=0

[tar//CmdLineObj//3]
rowid=79
SuperUserMode=0
Notes=Unarchive the tar into the specified folder. If you don't use -C it will overwrite the original folder. -C folder  (CompressTest2) must exist. And finally the full path from the archive will be written into the specified folder. Look at the results and you'll see what I mean.
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=34
SO=3
Entry=tar -xvf ~/CompTest.tar -C ~/CompressTest2/
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[tar//CmdLineObj//4]
rowid=80
SuperUserMode=0
Notes=Save as above but for gzip'd tar's. it Uncompresses and then extracts, notice it is the same command but just specifying the .bz2 file. The same can be done for the .gz file.
IsFavorite=1
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=34
SO=4
Entry=tar -xvf ~/CompTest.tar.bz2 -C ~/CompressTest2/
FriendlyName=tar UNCOMPRESS and EXTRACT
WantsInput=0
UseShell=0
TerminalAlert=0

[tar//CmdLineObj//5]
rowid=81
SuperUserMode=0
Notes=List contents of a tar, tar.bz2 or tar.gz file.
IsFavorite=1
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=34
SO=5
Entry=tar -tvf ~/CompTest.tar.bz2
FriendlyName=tar SHOW FILES
WantsInput=0
UseShell=0
TerminalAlert=0

[tee//CmdLineObj]
0=0
1=1

[tee//CmdLineObj//0]
rowid=698
SuperUserMode=0
Notes=This will prompt for some input from you and then output it to the display and APPEND (-a) it to the specified file. A poor man's "touch".  :)Unfortunately it doesn't seem to respect line returns.
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=144
SO=0
Entry=tee -a ~/MyWonderfulThoughts.txt
FriendlyName=
WantsInput=1
UseShell=0
TerminalAlert=0

[tee//CmdLineObj//1]
rowid=699
SuperUserMode=0
Notes=Display the count of txt files and saves it to the FileCount.txt file. This overwrites the file, so careful.
IsFavorite=0
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=144
SO=1
Entry=ls -1 ~/Documents/*.txt | wc -l | tee ~/FileCount.txt
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[touch//CmdLineObj]
0=0

[touch//CmdLineObj//0]
rowid=697
SuperUserMode=0
Notes=This WILL create the file with a size of 0 bytes. You can then open it add text.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=148
SO=0
Entry=touch ~/MyEmptyTextfile.txt
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=1

[tr//CmdLineObj]
0=0

[tr//CmdLineObj//0]
rowid=224
SuperUserMode=0
Notes=Simplest example changing a word from lowercase to upper. tr is used in one of the "linux trix" examples. This command should be studied and practiced first.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=145
SO=0
Entry=echo "welcome" | tr [:lower:] [:upper:]
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[umount//CmdLineObj]
0=0

[umount//CmdLineObj//0]
rowid=728
SuperUserMode=1
Notes=You know what you are doing, right? (for the "alert on use" flag)This will un-mount the testmount you made if you used the example in 'mount'. Note this is checked for SuperUser.
IsFavorite=0
DetachProcess=0
ThreatLevel=3
TerminalOnly=0
CmdFK=10
SO=0
Entry=<ROOT> umount ~/testmount
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=1

[uname//CmdLineObj]
0=0
1=1

[uname//CmdLineObj//0]
rowid=708
SuperUserMode=0
Notes=List the information about your system and linux version.
IsFavorite=1
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=9
SO=0
Entry=uname -a
FriendlyName=Linux Version
WantsInput=0
UseShell=0
TerminalAlert=0

[uname//CmdLineObj//1]
rowid=709
SuperUserMode=0
Notes=List the information about your Kernel release version.
IsFavorite=1
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=9
SO=1
Entry=uname -r
FriendlyName=Linux Kernel Version
WantsInput=0
UseShell=0
TerminalAlert=0

[uniq//CmdLineObj]
0=0
1=1
2=2

[uniq//CmdLineObj//0]
rowid=705
SuperUserMode=0
Notes=This will ask for input on running, type in some lines (sorted!) with duplicates Like this below:batbatcatcatcatdog
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=150
SO=0
Entry=uniq
FriendlyName=
WantsInput=1
UseShell=0
TerminalAlert=0

[uniq//CmdLineObj//1]
rowid=706
SuperUserMode=0
Notes=-c gives a count of the lines:batbatcatcatcatdog
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=150
SO=1
Entry=uniq -c
FriendlyName=
WantsInput=1
UseShell=0
TerminalAlert=0

[uniq//CmdLineObj//2]
rowid=707
SuperUserMode=0
Notes=NOTE: file must be sorted first.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=150
SO=2
Entry=uniq -c ~/MySortedFile
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=1

[updatedb//CmdLineObj]
0=0

[updatedb//CmdLineObj//0]
rowid=632
SuperUserMode=1
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=186
SO=0
Entry=<ROOT> updatedb
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[uptime//CmdLineObj]
0=0
1=1

[uptime//CmdLineObj//0]
rowid=703
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=158
SO=0
Entry=uptime
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[uptime//CmdLineObj//1]
rowid=704
SuperUserMode=0
Notes="pretty" format
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=158
SO=1
Entry=uptime -p
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[users//CmdLineObj]
0=0

[users//CmdLineObj//0]
rowid=716
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=154
SO=0
Entry=users
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[vmstat//CmdLineObj]
0=0
1=1
2=2

[vmstat//CmdLineObj//0]
rowid=713
SuperUserMode=0
Notes=You will, of course, need to hire an interpreter.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=165
SO=0
Entry=vmstat
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[vmstat//CmdLineObj//1]
rowid=714
SuperUserMode=0
Notes=Informative message about forks.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=165
SO=1
Entry=vmstat -f
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[vmstat//CmdLineObj//2]
rowid=715
SuperUserMode=0
Notes=Disks.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=165
SO=2
Entry=vmstat -D
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[w//CmdLineObj]
0=0

[w//CmdLineObj//0]
rowid=712
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=175
SO=0
Entry=w
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[wc//CmdLineObj]
0=0
1=1

[wc//CmdLineObj//0]
rowid=724
SuperUserMode=0
Notes=This will ask for input, type something in.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=162
SO=0
Entry=wc
FriendlyName=
WantsInput=1
UseShell=0
TerminalAlert=0

[wc//CmdLineObj//1]
rowid=725
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=162
SO=1
Entry=wc /etc/fstab
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[whatis//CmdLineObj]
0=0
1=1

[whatis//CmdLineObj//0]
rowid=722
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=176
SO=0
Entry=whatis -v uname
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[whatis//CmdLineObj//1]
rowid=723
SuperUserMode=0
Notes=This will ask at runtime what command you are looking for.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=176
SO=1
Entry=whatis -v <<S>>
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[whereis//CmdLineObj]
0=0
1=1

[whereis//CmdLineObj//0]
rowid=720
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=161
SO=0
Entry=whereis rsync
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[whereis//CmdLineObj//1]
rowid=721
SuperUserMode=0
Notes=If it can't find the file it simply gives back the name with no information.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=161
SO=1
Entry=whereis Xyasss?
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[which//CmdLineObj]
0=0
1=1

[which//CmdLineObj//0]
rowid=718
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=169
SO=0
Entry=which rsync
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[which//CmdLineObj//1]
rowid=719
SuperUserMode=0
Notes=Fill in what you are looking for at runtime.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=169
SO=1
Entry=which <<S>>
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[who//CmdLineObj]
0=0
1=1

[who//CmdLineObj//0]
rowid=710
SuperUserMode=0
Notes=
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=168
SO=0
Entry=who
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[who//CmdLineObj//1]
rowid=711
SuperUserMode=0
Notes=Run Level.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=168
SO=1
Entry=who -r
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[whoami//CmdLineObj]
0=0

[whoami//CmdLineObj//0]
rowid=717
SuperUserMode=0
Notes=Kind of disappointing. I expected more.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=167
SO=0
Entry=whoami
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[xargs//CmdLineObj]
0=0
1=1
2=2

[xargs//CmdLineObj//0]
rowid=145
SuperUserMode=0
Notes=The -n2 says print at most two columns at a time.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=68
SO=0
Entry=echo 1 2 3 4 5 | xargs -n2
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[xargs//CmdLineObj//1]
rowid=146
SuperUserMode=0
Notes=Will work with "Wants Input". Type a short line when prompted and this will break it up with a word on each line.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=68
SO=1
Entry=xargs -n1
FriendlyName=
WantsInput=1
UseShell=0
TerminalAlert=0

[xargs//CmdLineObj//2]
rowid=147
SuperUserMode=0
Notes=A typical use of xargs with find. This will print the total size of all *.jpg files in the Pictures folder.  Such searches can be quite large, give it time to finish.Note the -print0 and the matching -0. This is how these commands get around whitespace (spaces) in filenames.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=68
SO=2
Entry=find ~/Pictures -iname "*.jpg" -print0 | xargs -0 du -ch | tail -1
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[xdg-open//CmdLineObj]
0=0
1=1

[xdg-open//CmdLineObj//0]
rowid=726
SuperUserMode=0
Notes=This will open my website in your default browser. Note this is NOT a "child proc". xdg-open will run, passing the information on to the system, and then finish. It does not need to "stay alive".
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=110
SO=0
Entry=xdg-open https://timepirate.org
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[xdg-open//CmdLineObj//1]
rowid=727
SuperUserMode=0
Notes=Will ask for the file or url at runtime. Careful, because don't open files or url's that come from an unknown source! I would suggest this NEVER be run as root or through pkexec.
IsFavorite=1
DetachProcess=0
ThreatLevel=2
TerminalOnly=0
CmdFK=110
SO=1
Entry=xdg-open <<F>>
FriendlyName=Open a FILE or URL
WantsInput=0
UseShell=0
TerminalAlert=0

[zsh//CmdLineObj]
0=0
1=1
2=2
3=3

[zsh//CmdLineObj//0]
rowid=498
SuperUserMode=0
Notes=zsh will open the man page for what ever you type in the variable when you run this CL. It is terminal only because it will require interaction from you.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=1
CmdFK=184
SO=0
Entry=zsh -c 'run-help <<S>>'
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[zsh//CmdLineObj//1]
rowid=499
SuperUserMode=0
Notes=get information about the zsh.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=184
SO=1
Entry=file -h /bin/zsh
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[zsh//CmdLineObj//2]
rowid=500
SuperUserMode=0
Notes=get information about the zsh.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=184
SO=2
Entry=file -h /usr/bin/zsh
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[zsh//CmdLineObj//3]
rowid=501
SuperUserMode=0
Notes=This will list zsh's current set of aliases.
IsFavorite=0
DetachProcess=0
ThreatLevel=1
TerminalOnly=0
CmdFK=184
SO=3
Entry=zsh -c "alias"
FriendlyName=
WantsInput=0
UseShell=0
TerminalAlert=0

[_DB_ProfileGUID]
GUID={88732DB1-398D-4281-B36F-9A17810FFC32}
